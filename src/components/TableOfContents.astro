---
import TableOfContentsHeading from '@/components/TabletOfContentsHeading'

const { headings } = Astro.props

type TableOfContent = {
	depth: number
	text: string
	slug: string
	subheadings: TableOfContent[]
}

const toc = buildToc(headings)
function buildToc(headings: TableOfContent[]) {
	let toc: TableOfContent[] = []
	let parentHeadings = new Map()
	headings.forEach((h) => {
		let heading = { ...h, subheadings: [] }
		parentHeadings.set(heading.depth, heading)
		// Treat depth 1, 2, and 3 as top-level headings for blog posts
		if (heading.depth === 1 || heading.depth === 2 || heading.depth === 3) {
			toc.push(heading)
		} else {
			const parent = parentHeadings.get(heading.depth - 1)
			if (parent && parent.subheadings) {
				parent.subheadings.push(heading)
			} else {
				// If no parent exists, treat as top-level heading
				toc.push(heading)
			}
		}
	})
	return toc
}
---

<nav class='max-w-xs'>
	<h2
		class='font-bold mb-4 text-xl text-gray-900 dark:text-white border-b border-gray-200 dark:border-gray-700 pb-2'
	>
		Table of Contents
	</h2>
	<ul class='space-y-1'>
		{toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
	</ul>
</nav>
